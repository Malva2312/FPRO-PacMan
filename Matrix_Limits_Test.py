from settings import *
# from app_class import *
result = []
# Pac_Man = START_POINT[0] <= []<=START_POINT[0] + int(MAZE_WIDTH/19 -2) and START_POINT[1] <= [] <= START_POINT[1] + int(MAZE_WIDTH/19 -2)

a =[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1],
    [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1],
    [1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1],
    [1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1],
    [1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1],
    [0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0],
    [1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1],
    [1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1],
    [1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1],
    [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1],
    [1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1],
    [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]

# for y, s in enumerate(a):
#     for x, v in enumerate(s):
#         if v == 1:
            
#             x * MAZE_WIDTH/19 and (x+1) * MAZE_WIDTH and y * MAZE_HEIGHT and (y+1) * MAZE_HEIGHT

# def limit(self,point, a_matrix):
#         a = True
#         for y, s in enumerate(a_matrix):
#             for x, v in enumerate(s):
#                 if v == 1:
            
#                     x * self.cell_wi - Radios <= point[0] <= (x+1) self.cell_wi +RADIOS and  <= point[0]
#         return a

# for y, s in enumerate(a):
#     for x, v in enumerate(s):
#         if v == 1:
#             result.append([x,y])

for y in range(len(a)):
    for x in range(len(a[y])):
        if a[y][x] == 1:
            result.append([x,y])
                    